@{
    ViewData["Title"] = "Home Page";
}

<style type="text/css">
    .alert-bar {
        display: none;
        margin-top: 2rem;
    }
</style>

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <input type="email" id="email" placeholder="enter your email address"/>
    <button type="button" onclick="sendMagicLinkAndCheckWebAuthnStatus()">Send</button>
    
    <div id="alert-bar" class="alert alert-success alert-bar" role="alert">
        We have sent an email, please click on the verification you have received!
    </div>
    <pre id="code" class="alert-bar">
        <code>
            <kbd id="json-code-block" ></kbd>
        </code>
        <button type="button" onclick="registerWebAuthnStart()">Add WebAuthn</button>
    </pre>

    <script type="text/javascript">
        var isFirstLogin = false;
        var webAuthnRegistered = false;
        var accessToken = "";

        function sendMagicLinkAndCheckWebAuthnStatus() {
            var email = document.getElementById("email").value;
            if (email) {
                checkWebAuthn(email, function() {
                    var xhttp = new XMLHttpRequest();
                    xhttp.open("POST", "Home/SendMagicLink", true);
                    xhttp.setRequestHeader('Content-type', 'application/json');
                    xhttp.send(JSON.stringify({email: email}));

                    xhttp.onreadystatechange = function() {
                        if (this.readyState === 4 && this.status === 200) {
                            var data = JSON.parse(xhttp.responseText);
                            if (data && data.stateId) {
                                document.getElementById("alert-bar").style.display = "block";
                                checkAuthStatus(data.stateId);
                            }
                        }
                    };
                });
            }
        }

        function checkAuthStatus(stateId) {
            var xhttp = new XMLHttpRequest();
            xhttp.open("GET", "Home/ValidateStateId?stateId=" + stateId, true);
            xhttp.send();

            xhttp.onreadystatechange = function() {
                if (this.readyState === 4 && this.status === 200) {

                    var responseData = JSON.parse(xhttp.responseText);
                    if (xhttp.responseText && responseData && responseData.authenticated) {
                        document.getElementById("code").style.display = "block";
                        document.getElementById("json-code-block").innerHTML = JSON.stringify(responseData,null,2);
                        accessToken = responseData.oAuth.accessToken;
                    } else { 
                        setTimeout(function () {checkAuthStatus(stateId)}, 3000);
                    }
                }
            };
        }

        function checkWebAuthn(email, sendMagicLinkFunc) {
            var xhttp = new XMLHttpRequest();
            xhttp.open("GET", "Home/CheckWebAuthnRequest?email=" + email, true);
            xhttp.send();

            xhttp.onreadystatechange = function () {
                if (this.readyState === 4 && this.status === 200) {

                    var responseData = JSON.parse(xhttp.responseText);
                    if (responseData) {
                        isFirstLogin = responseData.firstLogin;
                        webAuthnRegistered = responseData.webAuthnRegistered;
                        if (!responseData.webAuthnRegistered) {
                            sendMagicLinkFunc();
                        }
                    }
                }
            };
        }

        function registerWebAuthnStart() {
            var xhttp = new XMLHttpRequest();
            xhttp.open("GET", `Home/RegistrationWebAuthnInitialize?token=${accessToken}`, true);
            xhttp.send();

            xhttp.onreadystatechange = function () {
                if (this.readyState === 4 && this.status === 200) {

                    alert(xhttp.responseText);
                    var responseData = JSON.parse(xhttp.responseText);
                    if (responseData) {
                        responseData.publicKey.challenge = bufferDecode(responseData.publicKey.challenge);
                        responseData.publicKey.user.id = bufferDecode(responseData.publicKey.user.id);
                        responseData.publicKey.rp.id = "localhost";
                        promptForWebAuthnChallenge(responseData.publicKey);
                    }
                }
            };
        }

        function bufferDecode(value) {
            return Uint8Array.from(atob(value), c => c.charCodeAt(0));
        }

        async function promptForWebAuthnChallenge(pubKey) {
            var cred = await navigator.credentials.create({
                publicKey: pubKey
            });

            console.log(cred);
        }

        function bufferEncode(value) {
            return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))
                .replace(/\+/g, "-")
                .replace(/\//g, "_")
                .replace(/=/g, "");;
        }

        function registerWebAuthnFinish(stateId, id, rawId, type, attestationObject, clientDataJSON) {

            var xhttp = new XMLHttpRequest();
            xhttp.open("POST", "Home/RegistrationWebAuthnFinish?state_id=" + stateId, true);
            xhttp.setRequestHeader('Content-type', 'application/json');
            xhttp.send(JSON.stringify({ id: id, rawId: rawId, type: type, attestationObject: attestationObject, clientDataJSON: clientDataJSON }));

            xhttp.onreadystatechange = function () {
                if (this.readyState === 4 && this.status === 200) {
                    var data = JSON.parse(xhttp.responseText);
                    if (data && data.authenticated) {
                        document.getElementById("alert-bar").style.display = "block";
                        checkAuthStatus(data.stateId);
                    }
                }
            };
            
        }
    </script>
</div>
